node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth2
	!
	interface eth1
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {275.0 137.0}
    labelcoords {275.0 165.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n5}
    interface-peer {eth2 n6}
    services {zebra IPForward}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.0.0.1
	#/sbin/ip route add 10.9.8.0/24 via 10.0.1.1
	#/sbin/ip route add 10.9.8.0/24 via 10.0.2.1
	/sbin/ip route add 10.0.3.0/29 via 10.0.2.2
	
	}
    }
}

node n2 {
    type lanswitch
    network-config {
	hostname n2
	!
    }
    canvas c1
    iconcoords {139.0 204.0}
    labelcoords {139.0 228.0}
    interface-peer {e0 n1}
    interface-peer {e1 n7}
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth2
	!
	interface eth1
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {528.0 139.0}
    labelcoords {528.0 167.0}
    interface-peer {eth0 n5}
    interface-peer {eth1 n6}
    interface-peer {eth2 n4}
    services {zebra StaticRoute IPForward}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.0.1.1
	#/sbin/ip route add 10.9.8.0/24 via 10.0.2.1
	#/sbin/ip route add 10.9.8.0/24 via 10.0.3.1
	/sbin/ip route add 10.0.0.0/24 via 10.0.3.1
	
	}
    }
}

node n5 {
    type hub
    network-config {
	hostname n5
	!
    }
    canvas c1
    iconcoords {384.0 82.0}
    labelcoords {384.0 106.0}
    interface-peer {e0 n1}
    interface-peer {e1 n3}
}

node n6 {
    type hub
    network-config {
	hostname n6
	!
    }
    canvas c1
    iconcoords {386.0 218.0}
    labelcoords {386.0 242.0}
    interface-peer {e0 n1}
    interface-peer {e1 n3}
}

node n4 {
    type hub
    network-config {
	hostname n4
	!
    }
    canvas c1
    iconcoords {633.0 236.0}
    labelcoords {633.0 260.0}
    interface-peer {e0 n3}
    interface-peer {e1 n8}
}

node n7 {
    type router
    model host
    network-config {
	hostname n7
	!
	interface eth0
	 ip address 10.0.0.10/24
	!
    }
    canvas c1
    iconcoords {103.0 293.0}
    labelcoords {103.0 325.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.1
	
	}
    }
    services {DefaultRoute SSH}
}

node n8 {
    type router
    model host
    network-config {
	hostname n8
	!
	interface eth0
	 ip address 10.0.3.10/24
	!
    }
    canvas c1
    iconcoords {680.0 324.0}
    labelcoords {680.0 356.0}
    interface-peer {eth0 n4}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.3.12
	
	}
    }
    services {DefaultRoute SSH}
}

link l1 {
    nodes {n2 n1}
    bandwidth 0
}

link l2 {
    nodes {n1 n5}
    bandwidth 0
}

link l3 {
    nodes {n5 n3}
    bandwidth 0
}

link l4 {
    nodes {n1 n6}
    bandwidth 0
}

link l5 {
    nodes {n6 n3}
    bandwidth 0
}

link l6 {
    nodes {n2 n7}
    bandwidth 0
}

link l7 {
    nodes {n3 n4}
    bandwidth 0
}

link l8 {
    nodes {n4 n8}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid no
    traffic_start 0
}

option session {
}

