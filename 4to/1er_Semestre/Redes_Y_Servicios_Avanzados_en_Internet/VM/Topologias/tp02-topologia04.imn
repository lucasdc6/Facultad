node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth1
	 ip address 10.0.1.1/24
	!
	interface eth0
	 ip address 10.0.0.1/24
	!
    }
    canvas c1
    iconcoords {101.0 112.0}
    labelcoords {101.0 140.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n2}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.0.0.1/24
	!
	interface eth1
	  ip address 10.0.1.1/24
	!
	router rip
	  network 10.0.0.0/24
	  network 10.0.1.0/24
	
	}
    }
    services {zebra RIP vtysh IPForward}
}

node n2 {
    type router
    model router
    network-config {
	hostname n2
	!
	interface eth1
	 ip address 10.0.2.1/24
	!
	interface eth0
	 ip address 10.0.1.2/24
	!
    }
    canvas c1
    iconcoords {323.0 124.0}
    labelcoords {323.0 152.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n3}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.0.1.2/24
	!
	interface eth1
	  ip address 10.0.2.1/24
	!
	router rip
	  network 10.0.1.0/24
	  network 10.0.2.0/24
	
	}
    }
    services {zebra RIP vtysh IPForward}
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth1
	 ip address 10.0.3.1/24
	!
	interface eth0
	 ip address 10.0.2.2/24
	!
    }
    canvas c1
    iconcoords {523.0 168.0}
    labelcoords {523.0 196.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n5}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.0.2.2/24
	!
	interface eth1
	  ip address 10.0.3.1/24
	!
	router rip
	  network 10.0.2.0/24
	  network 10.0.3.0/24
	!
	
	}
    }
    services {zebra RIP vtysh IPForward}
}

node n4 {
    type lanswitch
    network-config {
	hostname n4
	!
    }
    canvas c1
    iconcoords {56.0 255.0}
    labelcoords {56.0 279.0}
    interface-peer {e0 n1}
}

node n5 {
    type lanswitch
    network-config {
	hostname n5
	!
    }
    canvas c1
    iconcoords {771.0 263.0}
    labelcoords {771.0 287.0}
    interface-peer {e0 n3}
}

link l1 {
    nodes {n4 n1}
    bandwidth 0
}

link l2 {
    nodes {n1 n2}
    bandwidth 0
}

link l3 {
    nodes {n2 n3}
    bandwidth 0
}

link l4 {
    nodes {n3 n5}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

hook 4:runtime_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state
python /home/core/quagga_manager.py -l -f /home/core/practica2/tp02-topologia03.imn
}

hook 5:datacollect_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state
python /home/core/quagga_manager.py -s -f /home/core/practica2/tp02-topologia03.imn
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    ipsec_configs yes
    exec_errors yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

