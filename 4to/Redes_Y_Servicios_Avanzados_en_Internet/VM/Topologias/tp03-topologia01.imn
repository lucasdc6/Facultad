node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth1
	 ip address 10.0.4.1/24
	!
	interface eth2
	 ip address 192.168.3.1/24
	!
    }
    canvas c1
    iconcoords {529.0 65.0}
    labelcoords {530.0 46.0}
    services {zebra OSPFv2 vtysh IPForward}
    interface-peer {eth2 n6}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.2/24
	!
	interface eth1
	  ip address 192.168.1.1/24
	!
	interface eth2
	  ip address 192.168.3.1/24
	!
	router ospf
	  ospf router-id 192.168.3.1
	}
    }
    interface-peer {eth1 n14}
}

node n2 {
    type router
    model router
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 10.0.4.2/24
	!
	interface eth2
	 ip address 192.168.5.1/24
	!
    }
    canvas c1
    iconcoords {588.0 423.0}
    labelcoords {575.0 462.0}
    services {zebra OSPFv2 vtysh IPForward}
    interface-peer {eth2 n5}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.1.2/24
	!
	interface eth1
	  ip address 192.168.2.2/24
	!
	interface eth2
	  ip address 192.168.5.1/24
	!
	}
    }
    interface-peer {eth0 n14}
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 10.0.5.1/24
	!
	interface eth3
	 ip address 10.0.4.3/24
	!
	interface eth2
	 ip address 10.0.0.1/24
	!
    }
    canvas c1
    iconcoords {243.0 69.0}
    labelcoords {224.0 48.0}
    services {zebra OSPFv2 vtysh IPForward}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 192.168.0.1/24
	!
	interface eth1
	  ip address 192.168.2.1/24
	!
	interface eth2
	  ip address 10.0.0.1/24
	}
    }
    interface-peer {eth2 n4}
    interface-peer {eth3 n14}
    interface-peer {eth0 n15}
}

node n5 {
    type lanswitch
    network-config {
	hostname n5
	!
    }
    canvas c1
    iconcoords {714.0 493.0}
    labelcoords {714.0 517.0}
    interface-peer {e0 n2}
    interface-peer {e1 n13}
}

node n6 {
    type lanswitch
    network-config {
	hostname n6
	!
    }
    canvas c1
    iconcoords {708.0 86.0}
    labelcoords {727.0 77.0}
    interface-peer {e0 n1}
    interface-peer {e1 n12}
}

node n4 {
    type router
    model router
    network-config {
	hostname n4
	!
	interface eth3
	 ip address 10.0.4.4/24
	!
	interface eth2
	 ip address 10.0.3.1/24
	!
	interface eth1
	 ip address 10.0.1.1/24
	!
	interface eth0
	 ip address 10.0.0.2/24
	!
    }
    canvas c1
    iconcoords {70.0 337.0}
    labelcoords {62.0 315.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n7}
    interface-peer {eth2 n9}
    services {zebra OSPFv2 vtysh IPForward}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.0.0.2/24
	!
	interface eth1
	  ip address 10.0.1.1/24
	!
	interface eth2
	  ip address 10.0.3.1/24
	!
	
	}
    }
    interface-peer {eth3 n14}
}

node n7 {
    type router
    model router
    network-config {
	hostname n7
	!
	interface eth1
	 ip address 10.0.2.1/24
	!
	interface eth0
	 ip address 10.0.1.2/24
	!
    }
    canvas c1
    iconcoords {205.0 567.0}
    labelcoords {218.0 551.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n8}
    services {zebra OSPFv2 vtysh IPForward}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.0.1.2/24
	!
	interface eth1
	  ip address 10.0.2.1/24
	!
	
	}
    }
}

node n8 {
    type lanswitch
    network-config {
	hostname n8
	!
    }
    canvas c1
    iconcoords {439.0 596.0}
    labelcoords {439.0 620.0}
    interface-peer {e0 n7}
    interface-peer {e1 n11}
}

node n9 {
    type lanswitch
    network-config {
	hostname n9
	!
    }
    canvas c1
    iconcoords {24.0 563.0}
    labelcoords {24.0 587.0}
    interface-peer {e0 n4}
    interface-peer {e1 n10}
}

node n10 {
    type router
    model PC
    network-config {
	hostname n10
	!
	interface eth0
	 ip address 10.0.3.20/24
	!
    }
    canvas c1
    iconcoords {198.0 610.0}
    labelcoords {198.0 642.0}
    interface-peer {eth0 n9}
    services {DefaultRoute}
}

node n11 {
    type router
    model PC
    network-config {
	hostname n11
	!
	interface eth0
	 ip address 10.0.2.20/24
	!
    }
    canvas c1
    iconcoords {576.0 597.0}
    labelcoords {576.0 629.0}
    interface-peer {eth0 n8}
}

node n12 {
    type router
    model PC
    network-config {
	hostname n12
	!
	interface eth0
	 ip address 192.168.3.20/24
	 ipv6 address 2001:4::20/64
	!
    }
    canvas c1
    iconcoords {858.0 198.0}
    labelcoords {858.0 230.0}
    interface-peer {eth0 n6}
}

node n13 {
    type router
    model PC
    network-config {
	hostname n13
	!
	interface eth0
	 ip address 192.168.5.20/24
	 ipv6 address 2001:5::20/64
	!
    }
    canvas c1
    iconcoords {839.0 380.0}
    labelcoords {844.0 361.0}
    interface-peer {eth0 n5}
}

node n14 {
    type lanswitch
    network-config {
	hostname n14
	!
    }
    canvas c1
    iconcoords {442.0 373.0}
    labelcoords {442.0 397.0}
    interface-peer {e0 n1}
    interface-peer {e1 n2}
    interface-peer {e2 n3}
    interface-peer {e3 n4}
}

node n15 {
    type lanswitch
    network-config {
	hostname n15
	!
    }
    canvas c1
    iconcoords {67.0 47.0}
    labelcoords {67.0 71.0}
    interface-peer {e0 n3}
    interface-peer {e1 n16}
}

node n16 {
    type router
    model PC
    network-config {
	hostname n16
	!
	interface eth0
	 ip address 10.0.5.20/24
	!
    }
    canvas c1
    iconcoords {37.0 201.0}
    labelcoords {37.0 233.0}
    interface-peer {eth0 n15}
}

link l4 {
    nodes {n6 n1}
    bandwidth 0
}

link l6 {
    nodes {n2 n5}
    bandwidth 0
}

link l5 {
    nodes {n3 n4}
    bandwidth 0
}

link l7 {
    nodes {n4 n7}
    bandwidth 0
}

link l8 {
    nodes {n8 n7}
    bandwidth 0
}

link l9 {
    nodes {n9 n4}
    bandwidth 0
}

link l10 {
    nodes {n6 n12}
    bandwidth 0
}

link l11 {
    nodes {n5 n13}
    bandwidth 0
}

link l12 {
    nodes {n8 n11}
    bandwidth 0
}

link l13 {
    nodes {n9 n10}
    bandwidth 0
}

link l2 {
    nodes {n1 n14}
    bandwidth 0
}

link l14 {
    nodes {n2 n14}
    bandwidth 0
}

link l15 {
    nodes {n14 n3}
    bandwidth 0
}

link l1 {
    nodes {n14 n4}
    bandwidth 0
}

link l3 {
    nodes {n15 n3}
    bandwidth 0
}

link l16 {
    nodes {n15 n16}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

hook 4:runtime_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state
python /home/core/quagga_manager.py -l -f /home/core/practica3/tp03-topologia01.imn

}

hook 5:datacollect_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state
python /home/core/quagga_manager.py -s -f /home/core/practica3/tp03-topologia01.imn

}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

