node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 10.0.0.1/24
	!
    }
    canvas c1
    iconcoords {232.0 80.0}
    labelcoords {232.0 108.0}
    interface-peer {eth0 n4}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.0.0.1/24
	!
	
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

node n2 {
    type router
    model router
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 10.0.0.2/24
	!
    }
    canvas c1
    iconcoords {624.0 144.0}
    labelcoords {624.0 172.0}
    interface-peer {eth0 n4}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.0.0.2/24
	!
	
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth1
	 ip address 10.0.1.200/24
	!
	interface eth0
	 ip address 10.0.0.3/24
	!
    }
    canvas c1
    iconcoords {529.0 354.0}
    labelcoords {529.0 382.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n5}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.0.0.3/24
	!
	interface eth1
	  ip address 10.0.1.200/24
	!
	
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

node n4 {
    type lanswitch
    network-config {
	hostname n4
	!
    }
    canvas c1
    iconcoords {452.0 183.0}
    labelcoords {452.0 207.0}
    interface-peer {e0 n1}
    interface-peer {e1 n2}
    interface-peer {e2 n3}
    interface-peer {e3 n8}
}

node n5 {
    type lanswitch
    network-config {
	hostname n5
	!
    }
    canvas c1
    iconcoords {460.0 580.0}
    labelcoords {460.0 604.0}
    interface-peer {e0 n3}
    interface-peer {e1 n6}
    interface-peer {e2 n7}
}

node n6 {
    type router
    model router
    network-config {
	hostname n6
	!
	interface eth0
	 ip address 10.0.1.2/24
	!
    }
    canvas c1
    iconcoords {130.0 577.0}
    labelcoords {130.0 605.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.0.1.2/24
	!
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

node n7 {
    type router
    model router
    network-config {
	hostname n7
	!
	interface eth0
	 ip address 10.0.1.3/24
	!
    }
    canvas c1
    iconcoords {725.0 594.0}
    labelcoords {725.0 622.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.0.1.3/24
	!
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

node n8 {
    type router
    model router
    network-config {
	hostname n8
	!
	interface eth0
	 ip address 10.0.0.4/24
	!
    }
    canvas c1
    iconcoords {187.0 179.0}
    labelcoords {187.0 207.0}
    interface-peer {eth0 n4}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 10.0.0.4/24
	!
	}
    }
    services {zebra OSPFv2 vtysh IPForward}
}

link l1 {
    nodes {n1 n4}
    bandwidth 0
}

link l2 {
    nodes {n4 n2}
    bandwidth 0
}

link l3 {
    nodes {n4 n3}
    bandwidth 0
}

link l4 {
    nodes {n3 n5}
    bandwidth 0
}

link l5 {
    nodes {n5 n6}
    bandwidth 0
}

link l6 {
    nodes {n5 n7}
    bandwidth 0
}

link l7 {
    nodes {n4 n8}
    bandwidth 0
}

annotation a1 {
    iconcoords {361.0 30.0}
    type text
    label {OSPF - Elecci√≥n del DR}
    labelcolor black
    fontfamily {Arial}
    fontsize {14}
    effects {bold}
    canvas c1
}

annotation a2 {
    type text
    iconcoords {452.0 344.0}
    label {}
    canvas c1
}

annotation a3 {
    type text
    iconcoords {468.0 352.0}
    label {}
    canvas c1
}

annotation a4 {
    iconcoords {150.0 51.0 740.0 337.0}
    type rectangle
    label {Red X}
    labelcolor black
    fontfamily {Arial}
    fontsize {14}
    color #C0C0FF
    width 0
    border black
    rad 25
    effects {bold}
    canvas c1
}

annotation a5 {
    iconcoords {85 356 768 630}
    type rectangle
    label {Red Y}
    labelcolor black
    fontfamily {Arial}
    fontsize {14}
    color #1bc0ff
    width 0
    border black
    rad 25
    effects {bold}
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

hook 4:runtime_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state
python /home/core/quagga_manager.py -l -f /home/core/practica3/tp03-topologia04.imn


}

hook 5:datacollect_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state
python /home/core/quagga_manager.py -s -f /home/core/practica3/tp03-topologia04.imn

}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

